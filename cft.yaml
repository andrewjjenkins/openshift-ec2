---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  InstanceType:
    Description: Instance Type
    Type: String
    Default: m4.2xlarge
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Mappings:
  AWSRegionAMI:
    us-west-2:
      HVM: ami-082fd9a18128c9e8c
Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceInitiatedShutdownBehavior: stop
      BlockDeviceMappings:
      - DeviceName: /dev/sda1
        Ebs:
          VolumeSize: 60
      UserData:
        Fn::Base64:
          Fn::Join:
          - "\n"
          - - "Content-Type: multipart/mixed; boundary=\"==BOUNDARY==\""
            - "MIME-Version: 1.0"
            - ""
            - "--==BOUNDARY=="
            - "MIME-Version: 1.0"
            - "Content-Type: text/cloud-config; charset=\"us-ascii\""
            - ""
            - |
              #cloud-config
              runcmd:
               - apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
               - apt-add-repository 'deb https://apt.dockerproject.org/repo ubuntu-xenial main'
               - apt-get update
               - apt-get dist-upgrade
               - apt-get install --yes --install-recommends docker-engine git sshfs tree jq direnv lnav curl unzip python pkg-config
               - adduser ubuntu docker
               - mkdir -p /etc/systemd/system/docker.service.d/
               - echo "[Service]" > /etc/systemd/system/docker.service.d/docker.conf
               - echo "ExecStart=" >> /etc/systemd/system/docker.service.d/docker.conf
               - echo "ExecStart=/usr/bin/dockerd -H fd:// --insecure-registry 172.30.0.0/16" >> /etc/systemd/system/docker.service.d/docker.conf
               - systemctl daemon-reload
               - service docker restart
               - curl -Lo openshift-origin-client-tools.tar.gz https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
               - tar -xvzf openshift-origin-client-tools.tar.gz
               - mv openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit/oc openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit/kubectl /usr/local/bin/
               - rm -r openshift-origin-client-tools*
               - curl -Lo /usr/local/bin/stern https://github.com/wercker/stern/releases/download/1.10.0/stern_linux_amd64
               - chmod +x /usr/local/bin/stern
               - HELMDIR=$(mktemp -d /tmp/helm.XXXXXXX) && OLDDIR=$PWD && cd $HELMDIR && curl -Lo helm.tgz https://storage.googleapis.com/kubernetes-helm/helm-v2.8.0-linux-amd64.tar.gz && tar -zxvf helm.tgz && chmod +x linux-amd64/helm && sudo mv linux-amd64/helm /usr/local/bin/ && cd $OLDDIR && rm -r $HELMDIR
               - git clone https://github.com/ahmetb/kubectx /opt/kubectx
               - ln -s /opt/kubectx/kubectx /usr/local/bin/
               - ln -s /opt/kubectx/kubens /usr/local/bin/
               - COMPDIR=$(pkg-config --variable=completionsdir bash-completion); ln -sf ~/.kubectx/completion/kubens.bash $COMPDIR/kubens; ln -sf ~/.kubectx/completion/kubectx.bash $COMPDIR/kubectx
               - oc cluster up
               - oc login -u system:admin
               - mv /.kube /openshift.local.clusterup /home/ubuntu/
               - chown -R ubuntu:ubuntu /home/ubuntu/.kube /home/ubuntu/openshift.local.clusterup
            - "--==BOUNDARY=="
      InstanceType:
        Ref: InstanceType
      SecurityGroups:
      - Ref: InstanceSecurityGroup
      KeyName:
        Ref: KeyName
      ImageId:
        Fn::FindInMap:
        - AWSRegionAMI
        - Ref: AWS::Region
        - HVM
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Ref: SSHLocation
  IPAddress:
    Type: AWS::EC2::EIP
  IPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId:
        Ref: EC2Instance
      EIP:
        Ref: IPAddress
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value:
      Ref: EC2Instance
  InstanceIPAddress:
    Description: IP address of the newly created EC2 instance
    Value:
      Ref: IPAddress

